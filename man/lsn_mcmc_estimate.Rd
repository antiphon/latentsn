% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc.R
\name{lsn_mcmc_estimate}
\alias{lsn_mcmc_estimate}
\title{MCMC Estimate Shotnoise Kernel}
\usage{
lsn_mcmc_estimate(
  phi,
  prior_lambda0 = c(1, 1000),
  prior_dbh = c(1, 3),
  prior_theta = NULL,
  prior_log_tau = c(0, 1),
  lambda0 = NULL,
  theta = NULL,
  log_tau = NULL,
  rho_scale = 1000,
  niter = 1000,
  print_every = -1,
  keep_every = 100,
  loc_storage = 10000,
  win = NULL,
  ada_bi = niter/2,
  prior_psi = c(gamma = 0, range = 0),
  Rmax = NULL,
  cutoff_q = 0.997,
  ...,
  timeout = Inf
)
}
\arguments{
\item{phi}{the data, tibble(x, y, xii) where the marks xii = 0,1}

\item{prior_lambda0}{prior for intensity of generators (or first parameter if using Strauss; Gamma)}

\item{prior_dbh}{generator dbh (Gamma)}

\item{prior_theta}{logistic regression coefficients (MVNormal)}

\item{prior_log_tau}{shape parameter, (Normal)}

\item{lambda0}{optional initial value}

\item{theta}{optional initial value}

\item{log_tau}{optional initial value}

\item{rho_scale}{adjustment parameter. Default 1000.}

\item{niter}{number of mcmc steps to run}

\item{print_every}{print freq}

\item{keep_every}{store generators only at this step iteration}

\item{loc_storage}{pre-sample this many uniform locations (faster to batch for polygon win)}

\item{win}{optional observation window, spatstat.geom::owin}

\item{ada_bi}{adaptive mcmc starts from this many interations (default: niter/2)}

\item{prior_psi}{strauss prior parameters c(gamma, range)}

\item{Rmax}{buffering / edge correction}

\item{cutoff_q}{kernel parameter}

\item{...}{}

\item{timeout}{max secs to use}
}
\value{
List with many elements, including the MCMC traces. Note that the parameter for the latent field ("U") needs to be exponentiated when used.
}
\description{
MCMC Estimate Shotnoise Kernel
}
\details{
all linear units are assumed to be the same, i.e. same units for locations and dbh and range-scales.
Any covariates can be given as additional columns in phi, names starting with "X_", e.g. "X_elevation". Note that
prior_theta should have the corresponding prior added to between first (intercept) and the last (reserved for random field).
}
